{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documentos/Next-course/podcasts/pages/channel/[channel].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport { useState } from \"react\";\nimport { css, jsx, Global } from '@emotion/core';\nimport Layout from '../../components/Layout';\nimport ChannelGrid from '../../components/ChannelGrid';\nimport PodcastList from '../../components/PodcastList';\nimport Error from '../_error';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar _ref = false ? {\n  name: \"m17218-styles\",\n  styles: \"& h1{font-weight:600;padding:15px;}& .banner{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;};label:styles;\"\n} : {\n  name: \"m17218-styles\",\n  styles: \"& h1{font-weight:600;padding:15px;}& .banner{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;};label:styles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhbmllbC9Eb2N1bWVudG9zL05leHQtY291cnNlL3BvZGNhc3RzL3BhZ2VzL2NoYW5uZWwvW2NoYW5uZWxdLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtCb0IiLCJmaWxlIjoiL2hvbWUvZGFuaWVsL0RvY3VtZW50b3MvTmV4dC1jb3Vyc2UvcG9kY2FzdHMvcGFnZXMvY2hhbm5lbC9bY2hhbm5lbF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY3NzLCBqc3gsIEdsb2JhbCB9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTGF5b3V0JztcbmltcG9ydCBDaGFubmVsR3JpZCBmcm9tICcuLi8uLi9jb21wb25lbnRzL0NoYW5uZWxHcmlkJztcbmltcG9ydCBQb2RjYXN0TGlzdCBmcm9tICcuLi8uLi9jb21wb25lbnRzL1BvZGNhc3RMaXN0JztcbmltcG9ydCBFcnJvciBmcm9tICcuLi9fZXJyb3InO1xuXG5jb25zdCBjaGFubmVsID0gKHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlIH0pID0+IHtcbiAgY29uc3QgWyBvcGVuUG9kY2FzdCwgc2V0UG9kY2FzdCBdID0gdXNlU3RhdGUobnVsbCk7XG5cbiAgY29uc3Qgc2V0T3BlblBvZGNhc3QgPSAoZXZlbnQsIHBvZGNhc3QpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmKCBldmVudC5tZXRhS2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkgfHwgKGV2ZW50Lm5hdGl2ZUV2ZW50ICYmIGV2ZW50Lm5hdGl2ZUV2ZW50LndoaWNoID09PSAyKSApe1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHNldFBvZGNhc3QocG9kY2FzdCk7XG4gIH1cblxuICBjb25zdCBzdHlsZXMgPSBjc3NgXG4gICAgJiBoMSB7XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgcGFkZGluZzogMTVweDtcbiAgICB9XG4gICYgLmJhbm5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZy1ib3R0b206IDI1JTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcbiAgfVxuXHRcdFxuICBgO1xuICBpZiggc3RhdHVzQ29kZSAhPSAyMDApIHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17c3RhdHVzQ29kZX0gLz5cblxuICByZXR1cm4oXG4gICAgPExheW91dCB0aXRsZT17Y2hhbm5lbC50aXRsZX0+XG4gICAgICA8ZGl2IGNzcz17c3R5bGVzfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYW5uZXJcIiBzdHlsZT17eyBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHtjaGFubmVsLnVybHMuYmFubmVyX2ltYWdlLm9yaWdpbmFsfSlgIH19IC8+XG4gICAgICAgIFxuICAgICAgICB7IG9wZW5Qb2RjYXN0ICYmIDxkaXY+SGF5IHVuIHBvZGNhc3QgQWJpZXJ0bzwvZGl2PiB9XG4gICAgICAgIFxuICAgICAgICA8aDE+eyBjaGFubmVsLnRpdGxlIH08L2gxPlxuXG4gICAgICAgIDxoMj5TZXJpZXM8L2gyPlxuICAgICAgICA8Q2hhbm5lbEdyaWQgY2hhbm5lbHM9e3Nlcmllc30vPlxuXG4gICAgICAgIDxoMj7Dmmx0aW1vcyBQb2RjYXN0czwvaDI+XG4gICAgICAgIDxQb2RjYXN0TGlzdCBhdWRpb0NsaXBzPXthdWRpb0NsaXBzfSBvbkNsaWNrUG9kY2FzdD17c2V0T3BlblBvZGNhc3R9Lz5cblxuICAgICAgPC9kaXY+XG4gICAgPC9MYXlvdXQ+XG4gIClcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlclNpZGVQcm9wcyh7IHF1ZXJ5LCByZXMgfSkge1xuXG4gIGxldCBjaGFubmVsSWQgPSBxdWVyeS5jaGFubmVsO1xuXG4gIHRyeXtcbiAgICBsZXQgWyByZXFDaGFubmVsLCByZXFBdWRpb0NsaXBzLCByZXFTZXJpZXMgXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7Y2hhbm5lbElkfWApLFxuICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtjaGFubmVsSWR9L2F1ZGlvX2NsaXBzYCksXG4gICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2NoYW5uZWxJZH0vY2hpbGRfY2hhbm5lbHNgKVxuICAgIF0pXG5cbiAgICBpZiggcmVxQ2hhbm5lbC5zdGF0dXMgPj0gNDAwICl7XG4gICAgICByZXMuc3RhdHVzQ29kZSA9IHJlcUNoYW5uZWwuc3RhdHVzXG4gICAgICByZXR1cm4geyBwcm9wczogeyBjaGFubmVsOiBudWxsLCBhdWRpb0NsaXBzOiBudWxsLCBzZXJpZXM6IG51bGwsIHN0YXR1c0NvZGU6IHJlcUNoYW5uZWwuc3RhdHVzIH19XG4gICAgfVxuICBcbiAgXG4gICAgbGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKCk7XG4gICAgbGV0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWxcbiAgICBcbiAgICBsZXQgZGF0YUF1ZGlvQ2xpcHMgPSBhd2FpdCByZXFBdWRpb0NsaXBzLmpzb24oKTtcbiAgICBsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb0NsaXBzLmJvZHkuYXVkaW9fY2xpcHNcbiAgXG4gICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpO1xuICAgIGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHNcbiAgXG4gICAgcmV0dXJuIHsgcHJvcHM6IHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlOiAyMDAgfSB9XG4gIH1cbiAgY2F0Y2goZSl7XG4gICAgcmV0dXJuIHsgcHJvcHM6IHsgY2hhbm5lbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlOiA1MDMgfX1cbiAgfVxuXG4gIFxufVxuXG5leHBvcnQgZGVmYXVsdCBjaGFubmVsOyJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nconst channel = ({\n  channel,\n  audioClips,\n  series,\n  statusCode\n}) => {\n  const {\n    0: openPodcast,\n    1: setPodcast\n  } = useState(null);\n\n  const setOpenPodcast = (event, podcast) => {\n    event.preventDefault();\n\n    if (event.metaKey || event.ctrlKey || event.shiftKey || event.nativeEvent && event.nativeEvent.which === 2) {\n      return;\n    }\n\n    setPodcast(podcast);\n  };\n\n  const styles = _ref;\n  if (statusCode != 200) return ___EmotionJSX(Error, {\n    statusCode: statusCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  });\n  return ___EmotionJSX(Layout, {\n    title: channel.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, ___EmotionJSX(\"div\", {\n    css: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, ___EmotionJSX(\"div\", {\n    className: \"banner\",\n    style: {\n      backgroundImage: `url(${channel.urls.banner_image.original})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), openPodcast && ___EmotionJSX(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }\n  }, \"Hay un podcast Abierto\"), ___EmotionJSX(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, channel.title), ___EmotionJSX(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Series\"), ___EmotionJSX(ChannelGrid, {\n    channels: series,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), ___EmotionJSX(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"\\xDAltimos Podcasts\"), ___EmotionJSX(PodcastList, {\n    audioClips: audioClips,\n    onClickPodcast: setOpenPodcast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport async function getServerSideProps({\n  query,\n  res\n}) {\n  let channelId = query.channel;\n\n  try {\n    let [reqChannel, reqAudioClips, reqSeries] = await Promise.all([fetch(`https://api.audioboom.com/channels/${channelId}`), fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`), fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`)]);\n\n    if (reqChannel.status >= 400) {\n      res.statusCode = reqChannel.status;\n      return {\n        props: {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        }\n      };\n    }\n\n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel;\n    let dataAudioClips = await reqAudioClips.json();\n    let audioClips = dataAudioClips.body.audio_clips;\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n    return {\n      props: {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      }\n    };\n  } catch (e) {\n    return {\n      props: {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      }\n    };\n  }\n}\nexport default channel;","map":{"version":3,"sources":["/home/daniel/Documentos/Next-course/podcasts/pages/channel/[channel].js"],"names":["useState","css","jsx","Global","Layout","ChannelGrid","PodcastList","Error","channel","audioClips","series","statusCode","openPodcast","setPodcast","setOpenPodcast","event","podcast","preventDefault","metaKey","ctrlKey","shiftKey","nativeEvent","which","styles","title","backgroundImage","urls","banner_image","original","getServerSideProps","query","res","channelId","reqChannel","reqAudioClips","reqSeries","Promise","all","fetch","status","props","dataChannel","json","body","dataAudioClips","audio_clips","dataSeries","channels","e"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { css, jsx, Global } from '@emotion/core'\nimport Layout from '../../components/Layout';\nimport ChannelGrid from '../../components/ChannelGrid';\nimport PodcastList from '../../components/PodcastList';\nimport Error from '../_error';\n\nconst channel = ({ channel, audioClips, series, statusCode }) => {\n  const [ openPodcast, setPodcast ] = useState(null);\n\n  const setOpenPodcast = (event, podcast) => {\n    event.preventDefault();\n    if( event.metaKey || event.ctrlKey || event.shiftKey || (event.nativeEvent && event.nativeEvent.which === 2) ){\n      return\n    }\n    setPodcast(podcast);\n  }\n\n  const styles = css`\n    & h1 {\n      font-weight: 600;\n      padding: 15px;\n    }\n  & .banner {\n    width: 100%;\n    padding-bottom: 25%;\n    background-position: 50% 50%;\n    background-size: cover;\n    background-color: #aaa;\n  }\n\t\t\n  `;\n  if( statusCode != 200) return <Error statusCode={statusCode} />\n\n  return(\n    <Layout title={channel.title}>\n      <div css={styles}>\n        <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\n        \n        { openPodcast && <div>Hay un podcast Abierto</div> }\n        \n        <h1>{ channel.title }</h1>\n\n        <h2>Series</h2>\n        <ChannelGrid channels={series}/>\n\n        <h2>Últimos Podcasts</h2>\n        <PodcastList audioClips={audioClips} onClickPodcast={setOpenPodcast}/>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps({ query, res }) {\n\n  let channelId = query.channel;\n\n  try{\n    let [ reqChannel, reqAudioClips, reqSeries ] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${channelId}`),\n      fetch(`https://api.audioboom.com/channels/${channelId}/audio_clips`),\n      fetch(`https://api.audioboom.com/channels/${channelId}/child_channels`)\n    ])\n\n    if( reqChannel.status >= 400 ){\n      res.statusCode = reqChannel.status\n      return { props: { channel: null, audioClips: null, series: null, statusCode: reqChannel.status }}\n    }\n  \n  \n    let dataChannel = await reqChannel.json();\n    let channel = dataChannel.body.channel\n    \n    let dataAudioClips = await reqAudioClips.json();\n    let audioClips = dataAudioClips.body.audio_clips\n  \n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels\n  \n    return { props: { channel, audioClips, series, statusCode: 200 } }\n  }\n  catch(e){\n    return { props: { channel: null, audioClips: null, series: null, statusCode: 503 }}\n  }\n\n  \n}\n\nexport default channel;"]},"metadata":{},"sourceType":"module"}